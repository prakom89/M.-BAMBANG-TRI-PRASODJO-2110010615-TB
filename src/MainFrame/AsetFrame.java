/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainFrame;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ACER
 */
public class AsetFrame extends javax.swing.JFrame {

    /**
     * Creates new form KategoriFrame
     */
    public AsetFrame() {
        initComponents();
        tampilkanData();
        loadKategori();
    }
    
    private void loadKategori() {
    try (Connection conn = KoneksiDB.getKoneksi();
         Statement stmt = conn.createStatement();
         ResultSet rs = stmt.executeQuery("SELECT id_kategori, nama_kategori FROM kategori")) {

        cmbKategori.removeAllItems();
        // Tambahkan item default pertama di ComboBox
        cmbKategori.addItem("Pilih Kategori");
        while (rs.next()) {
            cmbKategori.addItem(rs.getString("nama_kategori"));
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal memuat data aset: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }
    
    private int getIdKategori(String namaKategori) {
    try (Connection conn = KoneksiDB.getKoneksi();
         PreparedStatement stmt = conn.prepareStatement("SELECT id_kategori FROM kategori WHERE nama_kategori = ?")) {

        stmt.setString(1, namaKategori);
        ResultSet rs = stmt.executeQuery();
        if (rs.next()) {
            return rs.getInt("id_kategori");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal mendapatkan ID Kategori: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    return -1; // Jika aset tidak ditemukan
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        txtNamaAset = new javax.swing.JTextField();
        btnTambah = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAset = new javax.swing.JTable();
        btnClose = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbKategori = new javax.swing.JComboBox<>();
        txtTanggalBeli = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("+ Data Aset");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Nama Kategori");

        txtNamaAset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaAsetActionPerformed(evt);
            }
        });

        btnTambah.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnTambah.setText("+ TAMBAH");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        tblAset.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Aset", "Nama Aset", "Kategori", "Tanggal Pembelian"
            }
        ));
        jScrollPane1.setViewportView(tblAset);

        btnClose.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnClose.setText("CLOSE");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Kategori");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Tanggal Pembelian");

        cmbKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTanggalBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNamaAset, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNamaAset, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbKategori)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(txtTanggalBeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
   // Ambil nilai dari form
    String namaAset = txtNamaAset.getText().trim();
    String namaKategori = (String) cmbKategori.getSelectedItem(); // Nama Aset dari ComboBox
    java.util.Date tanggalBeliUtil = txtTanggalBeli.getDate(); // Ambil tanggal dari JDateChooser
    
    // Validasi Kategori
    if (cmbKategori.getSelectedIndex() == 0 || namaAset.equals("Pilih Kategori")) {
        JOptionPane.showMessageDialog(this, "Kategori harus dipilih.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validasi Kondisi
    if (namaAset.isEmpty()) {
        JOptionPane.showMessageDialog(this, "aset tidak boleh kosong.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validasi Tanggal Beli
    if (tanggalBeliUtil == null) {
        JOptionPane.showMessageDialog(this, "Tanggal beli tidak boleh kosong.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Konversi tanggal ke java.sql.Date
    java.sql.Date tanggalBeli = new java.sql.Date(tanggalBeliUtil.getTime());

    // Ambil ID Aset berdasarkan Nama Aset
    int idKategori = getIdKategori(namaKategori); // Metode untuk mendapatkan ID Aset
    if (idKategori == -1) {
        JOptionPane.showMessageDialog(this, "Kategori tidak valid.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Proses penyimpanan ke database
    try (Connection conn = KoneksiDB.getKoneksi();
         PreparedStatement stmt = conn.prepareStatement(
         "INSERT INTO aset (nama_aset, id_kategori, tanggal_beli) VALUES (?, ?, ?)")) {

        // Isi parameter query
        stmt.setString(1, namaAset);
        stmt.setInt(2, idKategori);
        stmt.setDate(3, tanggalBeli);

        // Eksekusi query
        stmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Data transaksi berhasil ditambahkan.", "Sukses", JOptionPane.INFORMATION_MESSAGE);

        // Bersihkan form setelah data ditambahkan
        clearForm();
        tampilkanData(); // Refresh data di JTable Transaksi

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menambahkan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
         this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void txtNamaAsetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaAsetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaAsetActionPerformed

    private void clearForm() {
    txtNamaAset.setText("");
    cmbKategori.setSelectedIndex(0);
    txtTanggalBeli.setDate(null);
    
    }
 
    // Fungsi untuk menampilkan data dari database ke JTable
    private void tampilkanData() {
    try (Connection conn = KoneksiDB.getKoneksi();
         PreparedStatement stmt = conn.prepareStatement("SELECT t.id_aset, t.nama_aset, a.nama_kategori, t.tanggal_beli FROM aset t JOIN kategori a ON t.id_kategori = a.id_kategori")) {

        ResultSet rs = stmt.executeQuery();
        DefaultTableModel model = (DefaultTableModel) tblAset.getModel();
        model.setRowCount(0); // Hapus semua data di JTable

        while (rs.next()) {
            Object[] row = {
                    rs.getInt("id_aset"),
                    rs.getString("nama_aset"),
                    rs.getString("nama_kategori"),
                    rs.getDate("tanggal_beli"),
            };
            model.addRow(row);
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menampilkan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AsetFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AsetFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AsetFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AsetFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AsetFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox<String> cmbKategori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblAset;
    private javax.swing.JTextField txtNamaAset;
    private com.toedter.calendar.JDateChooser txtTanggalBeli;
    // End of variables declaration//GEN-END:variables
}
